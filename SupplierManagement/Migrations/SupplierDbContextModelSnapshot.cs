// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupplierManagement.Data;

#nullable disable

namespace SupplierManagement.Migrations
{
    [DbContext(typeof(SupplierDbContext))]
    partial class SupplierDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SupplierManagement.Models.ItemLedgerEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseOrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderItemId");

                    b.ToTable("ItemLedgerEntries");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseReceipts");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseReceiptItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseReceiptId")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("PurchaseOrderItemId");

                    b.HasIndex("PurchaseReceiptId");

                    b.ToTable("PurchaseReceiptItems");
                });

            modelBuilder.Entity("SupplierManagement.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("SupplierManagement.Models.ItemLedgerEntry", b =>
                {
                    b.HasOne("SupplierManagement.Models.PurchaseOrderItem", "PurchaseOrderItem")
                        .WithMany("ItemLedgerEntries")
                        .HasForeignKey("PurchaseOrderItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PurchaseOrderItem");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseOrder", b =>
                {
                    b.HasOne("SupplierManagement.Models.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("SupplierManagement.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseReceipt", b =>
                {
                    b.HasOne("SupplierManagement.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseReceipts")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseReceiptItem", b =>
                {
                    b.HasOne("SupplierManagement.Models.PurchaseOrder", null)
                        .WithMany("PurchaseReceiptItems")
                        .HasForeignKey("PurchaseOrderId");

                    b.HasOne("SupplierManagement.Models.PurchaseOrderItem", "PurchaseOrderItem")
                        .WithMany("PurchaseReceiptItems")
                        .HasForeignKey("PurchaseOrderItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SupplierManagement.Models.PurchaseReceipt", "PurchaseReceipt")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseReceiptId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PurchaseOrderItem");

                    b.Navigation("PurchaseReceipt");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseOrder", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("PurchaseReceiptItems");

                    b.Navigation("PurchaseReceipts");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseOrderItem", b =>
                {
                    b.Navigation("ItemLedgerEntries");

                    b.Navigation("PurchaseReceiptItems");
                });

            modelBuilder.Entity("SupplierManagement.Models.PurchaseReceipt", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SupplierManagement.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
